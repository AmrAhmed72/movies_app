import '../../model/movies_model.dart' as old;
import '../../data/models/movie_data_model.dart';

class MovieAdapter {
  static List<Movie> convertOldToNew(List<old.Movies> oldMovies) {
    return oldMovies.map((oldMovie) => Movie(
      id: oldMovie.id,
      url: oldMovie.url,
      imdbCode: oldMovie.imdbCode,
      title: oldMovie.title,
      titleEnglish: oldMovie.titleEnglish,
      titleLong: oldMovie.titleLong,
      slug: oldMovie.slug,
      year: oldMovie.year,
      rating: oldMovie.rating?.toDouble(),
      runtime: oldMovie.runtime,
      genres: oldMovie.genres,
      summary: oldMovie.summary,
      descriptionFull: oldMovie.descriptionFull,
      synopsis: oldMovie.synopsis,
      ytTrailerCode: oldMovie.ytTrailerCode,
      language: oldMovie.language,
      mpaRating: oldMovie.mpaRating,
      backgroundImage: oldMovie.backgroundImage,
      backgroundImageOriginal: oldMovie.backgroundImageOriginal,
      smallCoverImage: oldMovie.smallCoverImage,
      mediumCoverImage: oldMovie.mediumCoverImage,
      largeCoverImage: oldMovie.largeCoverImage,
      state: oldMovie.state,
      torrents: oldMovie.torrents?.map((oldTorrent) => Torrent(
        url: oldTorrent.url,
        hash: oldTorrent.hash,
        quality: oldTorrent.quality,
        type: oldTorrent.type,
        isRepack: oldTorrent.isRepack,
        videoCodec: oldTorrent.videoCodec,
        bitDepth: oldTorrent.bitDepth,
        audioChannels: oldTorrent.audioChannels,
        seeds: oldTorrent.seeds,
        peers: oldTorrent.peers,
        size: oldTorrent.size,
        sizeBytes: oldTorrent.sizeBytes,
        dateUploaded: oldTorrent.dateUploaded,
        dateUploadedUnix: oldTorrent.dateUploadedUnix,
      )).toList(),
      dateUploaded: oldMovie.dateUploaded,
      dateUploadedUnix: oldMovie.dateUploadedUnix,
    )).toList();
  }

  static old.Movies convertNewToOld(Movie newMovie) {
    return old.Movies(
      id: newMovie.id,
      url: newMovie.url,
      imdbCode: newMovie.imdbCode,
      title: newMovie.title,
      titleEnglish: newMovie.titleEnglish,
      titleLong: newMovie.titleLong,
      slug: newMovie.slug,
      year: newMovie.year,
      rating: newMovie.rating,
      runtime: newMovie.runtime,
      genres: newMovie.genres,
      summary: newMovie.summary,
      descriptionFull: newMovie.descriptionFull,
      synopsis: newMovie.synopsis,
      ytTrailerCode: newMovie.ytTrailerCode,
      language: newMovie.language,
      mpaRating: newMovie.mpaRating,
      backgroundImage: newMovie.backgroundImage,
      backgroundImageOriginal: newMovie.backgroundImageOriginal,
      smallCoverImage: newMovie.smallCoverImage,
      mediumCoverImage: newMovie.mediumCoverImage,
      largeCoverImage: newMovie.largeCoverImage,
      state: newMovie.state,
      torrents: newMovie.torrents?.map((newTorrent) => old.Torrents(
        url: newTorrent.url,
        hash: newTorrent.hash,
        quality: newTorrent.quality,
        type: newTorrent.type,
        isRepack: newTorrent.isRepack,
        videoCodec: newTorrent.videoCodec,
        bitDepth: newTorrent.bitDepth,
        audioChannels: newTorrent.audioChannels,
        seeds: newTorrent.seeds,
        peers: newTorrent.peers,
        size: newTorrent.size,
        sizeBytes: newTorrent.sizeBytes,
        dateUploaded: newTorrent.dateUploaded,
        dateUploadedUnix: newTorrent.dateUploadedUnix,
      )).toList(),
      dateUploaded: newMovie.dateUploaded,
      dateUploadedUnix: newMovie.dateUploadedUnix,
    );
  }
}
